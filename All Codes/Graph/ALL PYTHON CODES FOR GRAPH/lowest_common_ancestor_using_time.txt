#include<iostream>
#include<list>
#include<cmath>

using namespace std;

const int N = 1e6+5, M = 20; // M = log value of N i.e 10^6 
list<int> gr[N];
int up[N][M], tin[N], tout[N], timer; // tin == timein , tout == timeout
// up for storing binary lifting data

void binary_lifting(int cur,int par){
	tin[cur] = ++timer;

	up[cur][0] = par;
	for(int j = 1; j < M; j++){
		up[cur][j] = up[up[cur][j-1]][j-1];
	}
	for(int child : gr[cur]){
		if(child != par){
			binary_lifting(child, cur);
		}
	}	

	tout[cur] = timer;
}

bool isAncestor(int u, int v){
	return tin[u] <= tin[v] && tout[v] <= tout[u];
}

int lca(int u,int v){
	if(isAncestor(u,v))
		return u;
	if(isAncestor(v,u))
		return v;
	for(int j = M - 1; j >= 0; j--){
		if(!isAncestor(up[u][j], v)){
			u = up[u][j];
		}
	}
	return up[u][0];
}

int main(){
	int n; cin>>n;
	int e; cin>>e;
	for(int i=0;i<e;i++){
		int u,v;cin>>u>>v;
		gr[u].push_back(v);
		gr[v].push_back(u);
	}
	timer = 0;
	tin[0] = 0; tout[0] = n + 1;
	binary_lifting(1,0);

	cout << lca(5,9) << endl;
	cout << lca(7,3) << endl;
	cout << lca(6,7) << endl;

 

	return 0;
}